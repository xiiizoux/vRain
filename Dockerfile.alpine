# 多阶段构建 - 构建阶段
FROM alpine:3.19 AS builder

# 设置环境变量
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

# 安装构建依赖
RUN apk add --no-cache \
    perl \
    perl-dev \
    perl-app-cpanminus \
    build-base \
    make \
    gcc \
    g++ \
    imagemagick-dev \
    freetype-dev \
    fontconfig-dev \
    zlib-dev \
    libpng-dev \
    jpeg-dev \
    libjpeg-turbo-dev \
    pkgconfig

# 安装Perl模块到临时目录
RUN mkdir -p /tmp/perl-modules
RUN cpanm --notest --no-man-pages --local-lib /tmp/perl-modules \
    PDF::Builder \
    Font::FreeType \
    Encode::HanConvert

# 运行时阶段
FROM alpine:3.19

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PERL5LIB=/app/perl-modules/lib/perl5

# 安装运行时依赖（最小化）
RUN apk add --no-cache \
    perl \
    imagemagick \
    imagemagick-perlmagick \
    freetype \
    fontconfig \
    ghostscript \
    bash \
    && rm -rf /var/cache/apk/*

# 从构建阶段复制Perl模块
COPY --from=builder /tmp/perl-modules /app/perl-modules

# 配置ImageMagick安全策略（允许PDF处理）
RUN sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-7/policy.xml || \
    sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml || true

# 复制项目文件
COPY . .

# 设置脚本执行权限
RUN chmod +x vrain.pl \
    && chmod +x canvas/*.pl \
    && chmod +x tools/*.pl \
    && chmod +x docker-entrypoint.sh

# 创建输出目录
RUN mkdir -p /app/output

# 设置入口点
ENTRYPOINT ["./docker-entrypoint.sh"]

# 默认命令
CMD ["--help"]
