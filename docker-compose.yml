version: '3.8'

networks:
  vrain-network:
    driver: bridge

services:
  # vRain 集成服务 - 包含核心功能和WebUI
  vrain:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: vrain:latest
    container_name: vrain-app
    restart: unless-stopped
    ports:
      # WebUI访问端口
      - "3012:3012"
    volumes:
      # 挂载书籍目录，便于输入输出（原项目数据）
      - ./books:/app/books:rw
      # 挂载字体目录（原项目资源）
      - ./fonts:/app/fonts:ro
      # 挂载背景图目录（原项目资源）
      - ./canvas:/app/canvas:rw
      # 挂载工具目录（原项目资源）
      - ./tools:/app/tools:ro
      # 挂载日志目录（用于调试和监控）
      - ./logs:/app/logs:rw
      # 注意：不挂载 output 目录，因为输出统一使用 books/ 目录
      # 注意：不挂载 webui 目录，避免覆盖容器内的构建文件
    environment:
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
      - NODE_ENV=production
      - WEBUI_PORT=3001
      - NGINX_PORT=3012
      - VRAIN_ROOT=/app
      - TZ=Asia/Shanghai
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3012/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - vrain-network
    depends_on: []
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 背景图生成服务（独立容器，用于专门的背景图生成任务）
  canvas:
    build:
      context: .
      dockerfile: Dockerfile.alpine
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: vrain-canvas:latest
    container_name: vrain-canvas
    restart: unless-stopped
    volumes:
      - ./canvas:/app/canvas:rw
      - ./fonts:/app/fonts:ro
      - ./output:/app/output:rw
      - ./books:/app/books:ro
      - ./logs:/app/logs:rw
    working_dir: /app/canvas
    environment:
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
      - TZ=Asia/Shanghai
    # 专门用于背景图生成，保持运行状态
    command: ["tail", "-f", "/dev/null"]
    healthcheck:
      test: ["CMD", "test", "-d", "/app/canvas", "&&", "test", "-x", "/app/canvas/canvas.pl"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - vrain-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
